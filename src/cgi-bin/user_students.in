#! /usr/bin/perl
use strict;
use lib '@datadir@/@PACKAGE@';
use Schulkonsole::Session;
use Schulkonsole::Sophomorix;

my $this_file = 'user_students';


my $sk_session = new Schulkonsole::Session($this_file);
if (not $sk_session->get_password()) {
	my $q = new CGI;
	my $url = $q->url( -full => 1 );

	# we send cookies over secure connections only
	if ($url =~ s/^http:/https:/g) {
		$sk_session->redirect($url);
	} else {
		$sk_session->exit_with_login_page($this_file);
	}
}

my $q = $sk_session->query();

my $id = $sk_session->userdata('id');
my $password = $sk_session->get_password();


eval {
COMMANDS: {
$q->param('studentsupload') and do {
	my $filename = $q->param('studentsfilename');
	if ($filename) {
		my @lines;
		while (<$filename>) {
			push @lines, $_;
		}

		Schulkonsole::Sophomorix::write_students_file($id, $password, \@lines);

		$sk_session->set_status($sk_session->d()->get(
			'Datei hochgeladen'), 0);

	} else {
		$sk_session->set_status($sk_session->d()->get(
			'Datei kann nicht gelesen werden'), 1);
	}

	last COMMANDS;
};

$q->param('studentsedit') and do {
	my @lines;
	foreach my $line (split "\n", $q->param('students')) {
		$line =~ s/\r$//;
		push @lines, "$line\n";
	}

	Schulkonsole::Sophomorix::write_students_file($id, $password, \@lines);

	$sk_session->set_status($sk_session->d()->get(
		'Datei wurde geschrieben'), 0);

	last COMMANDS;
};

}
};
if ($@) {
	$sk_session->standard_error_handling($this_file, $@);
}



eval {
my $students_lines
	= Schulkonsole::Sophomorix::read_students_file($id, $password);
$q->param('students', join('', @$students_lines)) unless $q->param('students');
};
if ($@) {
	$sk_session->standard_error_handling($this_file, $@);
}





$sk_session->print_page("$this_file.shtml", $this_file);
