#! /usr/bin/perl

=head1 NAME

settings - produces start page for settings

=head1 SYNOPSIS

 https://server/schulkonsole/settings

=head1 DESCRIPTION

C<settings> produces the start page of settings.
The HTML template is settings.shtml.

=head2 Template variables

Additionally to the variables of Schulkonsole::Session C<settings>
provides the following variables:

=over

=cut

use strict;
use lib '@datadir@/@PACKAGE@';
use Schulkonsole::DB;
use Schulkonsole::Session;
use Schulkonsole::Sophomorix;


my $this_file = 'settings_classs';


my $sk_session = new Schulkonsole::Session($this_file);
if (not $sk_session->get_password()) {
	my $q = new CGI;
	my $url = $q->url( -full => 1 );

	# we send cookies over secure connections only
	if ($url =~ s/^http:/https:/g) {
		$sk_session->redirect($url);
	} else {
		$sk_session->exit_with_login_page($this_file);
	}
}

my $q = $sk_session->query();


my $id = $sk_session->userdata('id');
my $password = $sk_session->get_password();



my $classs;
eval {

$classs = Schulkonsole::DB::all_classes();
delete $$classs{'attic'};

};
if ($@) {
	$sk_session->standard_error_handling($this_file, $@);
}




if ($q->param('accept')) {
	my @hide_classs;
	my @unhide_classs;
	foreach my $class (keys %$classs) {
		if ($q->param("${class}_visible")) {
			if ($$classs{$class}{type} ne 'adminclass') {
				push @unhide_classs, $class;
			}
		} elsif ($$classs{$class}{type} eq 'adminclass') {
			push @hide_classs, $class;
		}
	}
	eval {
		Schulkonsole::Sophomorix::hide_unhide_classes(
			$id, $password,
			\@hide_classs, \@unhide_classs);
		$classs = Schulkonsole::DB::all_classes();
	};
	if ($@) {
		$sk_session->standard_error_handling($this_file, $@);
	}
}



my @classs;
foreach my $class (sort {
	my ($A) = $$classs{$a}{displayname} =~ /^(\d+)/;
	my ($B) = $$classs{$b}{displayname} =~ /^(\d+)/;
	   $A <=> $B
	or $$classs{$a}{displayname} cmp $$classs{$b}{displayname} }
                   keys %$classs) {
	push @classs, { gid => $class,
	                name => $$classs{$class}{displayname},
	                visible => $$classs{$class}{type} eq 'adminclass'
	              };
}

=item C<classes>

An array of hashes of the classes of which the current user is a member
with the keys

=over

=item C<gid>

The GID of the class

=item C<name>

The name of the class

=back

=cut

$sk_session->set_var('classes', \@classs);





$sk_session->print_page("$this_file.shtml", $this_file);




=back

=head2 Form fields

=over

=item C<accept>

Write the changes

=cut




=back
