#! /usr/bin/perl
use strict;
use lib '@datadir@/@PACKAGE@';
use Schulkonsole::Session;
use Schulkonsole::Info;
use Schulkonsole::Sophomorix;

my $this_file = 'class_passwords';


my $sk_session = new Schulkonsole::Session($this_file);
if (not $sk_session->get_password()) {
	my $q = new CGI;
	my $url = $q->url( -full => 1 );

	# we send cookies over secure connections only
	if ($url =~ s/^http:/https:/g) {
		$sk_session->redirect($url);
	} else {
		$sk_session->exit_with_login_page($this_file);
	}
}

my $q = $sk_session->query();


my $class = $sk_session->param('class');
my $classs = Schulkonsole::Info::groups_classes($sk_session->groups());
if (   not $class
    or not $$classs{$class}) {
	my $url = $q->url( -absolute => 1 );
	$url =~ s/$this_file$/class/g;
	$sk_session->redirect($url);
}

$sk_session->set_var('class', $$classs{$class}{displayname});

my $path = $q->path_info();
$path =~ s:^/+:: if defined $path;
if ($path) {
	if ($q->param('passwords_print')) {
		eval {
		my $pdf_data = Schulkonsole::Sophomorix::print_class(
			$sk_session->userdata('id'),
			$sk_session->get_password(),
			$class);

		if ($pdf_data =~ /^\%PDF/) {
			print $q->header( -type => 'application/pdf' ), $pdf_data;

			exit;
		} else {
			$sk_session->set_status_redirect($sk_session->d()->get(
				'Fehler bei der Erzeugung des Dokuments'), 1);
		}
		};
		if ($@) {
			if (ref $@) {
				if ($@->{internal}) {
					$sk_session->set_status_redirect(
						$sk_session->d()->get('Interner Fehler'), 1);
					print STDERR $@;
				} else {
					$sk_session->set_status_redirect(
						$sk_session->d()->get($@->what()), 1);
				}
			} else {
				die $@;
			}
		}
	}

	my $url = $q->url( -absolute => 1 );
	$sk_session->redirect($url);
}



my $class_userdatas = Schulkonsole::DB::get_class_userdatas($class);


foreach my $user (keys %$class_userdatas) {
	if ($q->param("${user}_showpassword")) {
		$sk_session->set_var('showfirstname',
			$$class_userdatas{$user}{firstname});
		$sk_session->set_var('showsurname',
			$$class_userdatas{$user}{surname});
		$sk_session->set_var('showusername', $user);
		$sk_session->set_var('showpassword',
			$$class_userdatas{$user}{firstpassword});
	
		$sk_session->print_page("showpassword.shtml", $this_file);
		exit;
	}
}


my @students;
my @user_selects;
foreach my $user (sort {
	$$class_userdatas{$a}{surname} cmp $$class_userdatas{$b}{surname} }
	keys %$class_userdatas) {

	my $is_selected = 0;
	if ($q->param("${user};select")) {
		push @user_selects, $user;
		$is_selected = 1;
	}

	my $student = {
		login => $user,
		firstname => $$class_userdatas{$user}{firstname},
		surname => $$class_userdatas{$user}{surname},
		selected => $is_selected,
	};
	push @students, $student;
}
$sk_session->set_var('students', \@students);


eval {
COMMANDS: {
$q->param('passwords_reset') and do {
	if (@user_selects) {
		Schulkonsole::Sophomorix::passwords_reset(
			$sk_session->userdata('id'),
			$sk_session->get_password(),
			@user_selects);

		$sk_session->set_status(
			$sk_session->d()->get('Passw&ouml;rter zur&uuml;ckgesetzt'), 0);
	} else {
		$sk_session->set_status(
			$sk_session->d()->get('Keine Benutzer ausgew&auml;hlt'), 1);
	}
	last COMMANDS;
};
$q->param('passwords_random') and do {
	if (@user_selects) {
		Schulkonsole::Sophomorix::passwords_random(
			$sk_session->userdata('id'),
			$sk_session->get_password(),
			@user_selects);

		$sk_session->set_status(
			$sk_session->d()->get('Zufallspassw&ouml;rter gesetzt'), 0);
	} else {
		$sk_session->set_status(
			$sk_session->d()->get('Keine Benutzer ausgew&auml;hlt'), 1);
	}
	last COMMANDS;
};
$q->param('passwords_set') and do {
	if (@user_selects) {
		if (my $user_password = $q->param('userpassword')) {
			Schulkonsole::Sophomorix::passwords_set(
				$sk_session->userdata('id'),
				$sk_session->get_password(),
				$user_password,
				@user_selects);

			$sk_session->set_status(
				$sk_session->d()->get('Passw&ouml;rter gesetzt'), 0);
		} else {
			$sk_session->set_status(
				$sk_session->d()->get('Kein Passwort eingegeben'), 1);
		}

	} else {
		$sk_session->set_status(
			$sk_session->d()->get('Keine Benutzer ausgew&auml;hlt'), 1);
	}
	last COMMANDS;
};
}
};
if ($@) {
	if (ref $@) {
		if ($@->{internal}) {
			$sk_session->set_status(
				$sk_session->d()->get('Interner Fehler'), 1);
			print STDERR $@;
		} else {
			$sk_session->set_status(
				$sk_session->d()->get($@->what()), 1);
		}
	} else {
		die $@;
	}
}



$sk_session->print_page("$this_file.shtml", $this_file);
