#! /usr/bin/perl
use strict;
use lib '@datadir@/@PACKAGE@';
use Schulkonsole::Session;
use Schulkonsole::Info;
use Schulkonsole::Sophomorix;

my $this_file = 'project_shares';


my $sk_session = new Schulkonsole::Session($this_file);
if (not $sk_session->get_password()) {
	my $q = new CGI;
	my $url = $q->url( -full => 1 );

	# we send cookies over secure connections only
	if ($url =~ s/^http:/https:/g) {
		$sk_session->redirect($url);
	} else {
		$sk_session->exit_with_login_page($this_file);
	}
}

my $q = $sk_session->query();


my $projects = Schulkonsole::Info::groups_projects($sk_session->groups());



my $project = $q->param('projects');
if (    $project
    and $$projects{$project}) {
	$sk_session->param('project', $project);
}
$project = $sk_session->param('project');

if (   not $project
    or not $$projects{$project}) {
	my $url = $q->url( -absolute => 1 );
	$url =~ s/$this_file$/project/g;
	$sk_session->redirect($url);
}

if (not Schulkonsole::DB::is_project_admin($$projects{$project}{id},
        	$sk_session->userdata('uidnumber'))) {
	$sk_session->set_status_redirect($sk_session->d()->get(
		'Sie sind kein Projektleiter'),
		1);

	my $url = $q->url( -absolute => 1 );
	$url =~ s/$this_file$/project_members/g;
	$sk_session->redirect($url);
}






my $member_userdatas
	= Schulkonsole::DB::project_user_members($$projects{$project}{gidnumber});

my @login_ids;
foreach my $user (keys %$member_userdatas) {
	push @login_ids, $$member_userdatas{$user}{id};
}



my $id = $sk_session->userdata('id');
my $password = $sk_session->get_password();
if ($q->param('acceptshares')) {
	my $share_states = Schulkonsole::Sophomorix::share_states(
		$id, $password, @login_ids);

	my @activate_shares;
	my @deactivate_shares;
	foreach my $user (keys %$member_userdatas) {
		next if $$member_userdatas{$user}{gid} eq 'teachers';

		my $user_id = $$member_userdatas{$user}{id};

		if ($q->param("$user;shares")) {
			push @activate_shares, $user unless $$share_states{$user_id};
		} else {
			push @deactivate_shares, $user if $$share_states{$user_id};
		}
	}

	if (   @activate_shares
	    or @deactivate_shares) {
		Schulkonsole::Sophomorix::shares_on($id, $password, @activate_shares)
			if @activate_shares;
		Schulkonsole::Sophomorix::shares_off($id, $password, @deactivate_shares)
			if @deactivate_shares;

		$sk_session->set_status(
			$sk_session->d()->get("&Auml;nderungen &uuml;bernommen."), 0);
	} else {
		$sk_session->set_status(
			$sk_session->d()->get("Keine &Auml;nderungen."), 1);
	}
}




my $share_states = Schulkonsole::Sophomorix::share_states(
	$id, $password, @login_ids);


my @students;
foreach my $user (sort {
	$$member_userdatas{$a}{surname} cmp $$member_userdatas{$b}{surname} }
	keys %$member_userdatas) {
	next if $$member_userdatas{$user}{gid} eq 'teachers';

	my $student = {
		login => $user,
		firstname => $$member_userdatas{$user}{firstname},
		surname => $$member_userdatas{$user}{surname},
		shares => $$share_states{$$member_userdatas{$user}{id}},
	};
	push @students, $student;

}
$sk_session->set_var('students', \@students);



my @projects;
foreach my $project (sort {
	$$projects{$a}{displayname} cmp $$projects{$b}{displayname} }
	keys %$projects) {
	push @projects, { gid => $project,
	                  name => $$projects{$project}{displayname},
	                  longname => $$projects{$project}{longname},
	                };
}
$sk_session->set_var('projects', \@projects);


$sk_session->set_var('isadmin', 1);
$sk_session->set_var('project_gid', $project);
$sk_session->set_var('project', $$projects{$project}{displayname});
$sk_session->set_var('projectlongname', $$projects{$project}{longname});


$sk_session->print_page("$this_file.shtml", $this_file);
