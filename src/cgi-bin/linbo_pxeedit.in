#! /usr/bin/perl

=head1 NAME

linbo_pxeedit - edit LINBO's PXE start files

=head1 SYNOPSIS

 https://server/schulkonsole/linbo_pxeedit

=head1 DESCRIPTION

C<linbo_pxeedit> lets the user choose a PXE start file and edit it.
The HTML template is linbo_pxeedit.shtml.

=head2 Template variables

Additionally to the variables of Schulkonsole::Session C<linbo_pxeedit>
provides the following variables:

=over

=cut

use strict;
use lib '@datadir@/@PACKAGE@';
use Schulkonsole::Session;
use Schulkonsole::Linbo;


my $this_file = 'linbo_pxeedit';



my $sk_session = new Schulkonsole::Session($this_file);
if (not $sk_session->get_password()) {
	my $q = new CGI;
	my $url = $q->url( -full => 1 );

	# we send cookies over secure connections only
	if ($url =~ s/^http:/https:/g) {
		$sk_session->redirect($url);
	} else {
		$sk_session->exit_with_login_page($this_file);
	}
}

my $q = $sk_session->query();


my $pxestarts = Schulkonsole::Linbo::pxestarts();
my $images = Schulkonsole::Linbo::images();

my $is_action;

eval {

SWITCHCOMMAND: {
$q->param('delete') and do {
	my $filename = $q->param('filename');

	if ($filename !~ /^pxegrub\.lst\.(?:[a-z\d_]+)$/) {
		$sk_session->set_status(sprintf($sk_session->d()->get(
			'%s ist keine PXE-Start-Datei'), $filename), 1);
		last SWITCHCOMMAND;
	}

	if (not $$pxestarts{$filename}) {
		$sk_session->set_status(sprintf($sk_session->d()->get(
			'%s existiert nicht'), $filename), 1);
		last SWITCHCOMMAND;
	}


	Schulkonsole::Linbo::delete_file(
		$sk_session->userdata('id'),
		$sk_session->get_password(),
		$filename);

	$pxestarts = Schulkonsole::Linbo::pxestarts();
	if (not $$pxestarts{$filename}) {
		$sk_session->set_status(sprintf($sk_session->d()->get(
			'%s gel&ouml;scht'), $filename), 0);
	} else {
		$sk_session->set_status(sprintf($sk_session->d()->get(
			'%s konnte nicht gel&ouml;scht werden'), $filename), 0);
	}

	last SWITCHCOMMAND;
};

$q->param('edit') and do {
	my $filename = $q->param('filename');

	if ($filename !~ /^pxegrub\.lst\.(?:[a-z\d_]+)$/) {
		$sk_session->set_status(sprintf($sk_session->d()->get(
			'%s ist keine PXE-Start-Datei'), $filename), 1);
		last SWITCHCOMMAND;
	}

	if (not $$pxestarts{$filename}) {
		$sk_session->set_status(sprintf($sk_session->d()->get(
			'%s existiert nicht'), $filename), 1);
		last SWITCHCOMMAND;
	}


	my $lines = $q->param('pxestart');

	Schulkonsole::Linbo::write_file(
		$sk_session->userdata('id'),
		$sk_session->get_password(),
		$filename,
		$lines);

	
	$sk_session->set_status(sprintf($sk_session->d()->get(
		'%s geschrieben'), $filename), 0);

	last SWITCHCOMMAND;
};


=head3 Parameters dependent on selected submit button

The following variables are set if a submit button of the form
<filename>_<command> has been selected. <filename> is the name of a
PXE start configuration file, and command is either C<edit> or C<delete>.

=cut

foreach my $param ($q->param) {
	if (my ($pxestart, $command) = $param =~ /^(.+)_(edit|delete)$/) {
		if (not $$pxestarts{$pxestart}) {
			$sk_session->set_status(sprintf($sk_session->d()->get(
				'%s existiert nicht'), $pxestart), 1);

			last SWITCHCOMMAND;
		}

		if ($command eq 'edit') {
			if (open REGPATCH, "<$Schulkonsole::Config::_linbo_dir/$pxestart") {
				flock REGPATCH, 1;
				seek REGPATCH, 0, 0;

				{
				local $/ = undef;
				my $lines = <REGPATCH>;
				$q->param('pxestart', $lines);
				}

=item C<editfilename>

Name of a file to delete, if <command> is C<edit>.
The contents of the file are in the query parameter C<pxestart>.

=cut

				$sk_session->set_var('editfilename', $pxestart);
				$is_action = 1;
			} else {
				$sk_session->set_status(sprintf($sk_session->d()->get(
					'Kann Datei %s nicht &ouml;ffnen'), $pxestart),
					1);

			}

			last SWITCHCOMMAND;
		} elsif ($command eq 'delete') {

=item C<deletefilename>

Name of a file to delete, if <command> is C<delete>.
(Waiting for confirmation).

=cut

			$sk_session->set_var('deletefilename', $pxestart);
			$is_action = 1;

			$sk_session->set_status('Bitte best&auml;tigen', 1);
			last SWITCHCOMMAND;
		}
	}
}

}
};
if ($@) {
	$sk_session->standard_error_handling($this_file, $@);
}



if (not $is_action) {
	my @array_pxestarts = sort keys %$pxestarts;

=item C<pxestarts>

A list of all pxestarts

=cut

	$sk_session->set_var('pxestarts', \@array_pxestarts);
}






$sk_session->print_page("$this_file.shtml", $this_file);







=back

=head2 Form fields

=over

=item C<filename>

Filename to process

=item C<delete>

Delete C<filename> if selected

=item C<edit> and C<pxestart>

Write C<pxestart> to C<filename> if selected

=item C<${pxestarts}_edit>

Edit file C<${pxestarts> if selected

=item C<${pxestarts}_delete>

Ask to confirm deletion of file C<${pxestarts> if selected

=back

