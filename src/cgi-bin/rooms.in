#! /usr/bin/perl
use strict;
use lib '@datadir@/@PACKAGE@';
use Schulkonsole::Session;
use Schulkonsole::Files;


my $this_file = 'rooms';



my $sk_session = new Schulkonsole::Session($this_file);
if (not $sk_session->get_password()) {
	my $q = new CGI;
	my $url = $q->url( -full => 1 );

	# we send cookies over secure connections only
	if ($url =~ s/^http:/https:/g) {
		$sk_session->redirect($url);
	} else {
		$sk_session->exit_with_login_page($this_file);
	}
}

my $q = $sk_session->query();



my $classrooms = eval { Schulkonsole::Config::classrooms(); };
$classrooms = [] if $@;
my $rooms = Schulkonsole::Config::rooms();

my %classrooms;
foreach my $classroom (@$classrooms) {
	$classrooms{$classroom} = 1;
}



if ($q->param('accept')) {
	eval {
		my %classrooms_new;

		foreach my $room (keys %$rooms) {
			if ($q->param("${room}_classroom")) {
				if (not $classrooms{$room}) {
					$classrooms_new{$room} = 1;
					$classrooms{$room} = 1;
				}
			} elsif ($classrooms{$room}) {
				$classrooms_new{$room} = 0;
				delete $classrooms{$room};
			}
		}
		if (%classrooms_new) {
			my $lines = new_classrooms_lines(\%classrooms_new);

			Schulkonsole::Files::write_classrooms_file(
				$sk_session->userdata('id'),
				$sk_session->get_password(),
				$lines);

			$sk_session->set_status($sk_session->d()->get(
				'&Auml;nderungen &uuml;bernommen'), 0);
		}
	};
	if ($@) {
		$sk_session->standard_error_handling($this_file, $@);
	}
}


my @rooms_array;
foreach my $room (sort keys %$rooms) {
	push @rooms_array, {
			name => $room,
			selected => (exists $classrooms{$room}),
		};
}
$sk_session->set_var('rooms', \@rooms_array);



$sk_session->print_page("$this_file.shtml", $this_file);




sub new_classrooms_lines {
	my $new = shift;


	my @lines;
	my %new = %$new;
	if (open CLASSROOMS, "<$Schulkonsole::Config::_classrooms_file") {
		while (<CLASSROOMS>) {
			my ($room) = /^([^#]+?)\s*$/;

			if (    $room
			    and defined $new{$room}
				and not $new{$room}) {
				delete $new{$room};
			} else {
				push @lines, $_;
			}
		}

		close CLASSROOMS;
	}


	if (%new) {
		foreach my $room (sort keys %new) {
			push @lines, "$room\n" if $new{$room};
		}
	}


	return \@lines;
}
