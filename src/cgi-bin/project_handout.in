#! /usr/bin/perl

=head1 NAME

project_handout - hand out files to project

=head1 SYNOPSIS

 https://server/schulkonsole/project_handout

=head1 DESCRIPTION

C<project_handout> lets you hand out files to a selected project.
The HTML template is project_handout.tt.

=head2 Template variables

Additionally to the variables of Schulkonsole::Session C<project_handout>
provides the following variables:

=over

=cut

use strict;
use lib '@datadir@/@PACKAGE@';
use Schulkonsole::Session;
use Schulkonsole::Info;
use Schulkonsole::Sophomorix;

my $this_file = 'project_handout';


my $sk_session = new Schulkonsole::Session($this_file);
if (not $sk_session->get_password()) {
	my $q = new CGI;
	my $url = $q->url( -full => 1 );

	# we send cookies over secure connections only
	if ($url =~ s/^http:/https:/g) {
		$sk_session->redirect($url);
	} else {
		$sk_session->exit_with_login_page($this_file);
	}
}

my $q = $sk_session->query();


my $projects = Schulkonsole::Info::groups_projects($sk_session->groups());



my $project = $q->param('projects');
if (    $project
    and $$projects{$project}) {
	$sk_session->param('project', $project);
}
$project = $sk_session->param('project');

if (   not $project
    or not $$projects{$project}) {
	my $url = $q->url( -absolute => 1 );
	$url =~ s/$this_file$/project/g;
	$sk_session->redirect($url);
}

if (not Schulkonsole::DB::is_project_admin($$projects{$project}{id},
        	$sk_session->userdata('uidnumber'))) {
	$sk_session->set_status_redirect($sk_session->d()->get(
		'Sie sind kein Projektleiter'),
		1);

	my $url = $q->url( -absolute => 1 );
	$url =~ s/$this_file$/project_members/g;
	$sk_session->redirect($url);
}





if ($q->param('handout')) {
	eval {
	Schulkonsole::Sophomorix::handout_project($sk_session->userdata('id'),
		$sk_session->get_password(),
		$project);

	$sk_session->set_status(
		$sk_session->d()->get('Vorlagen bereitgestellt'), 0);
	};
	if ($@) {
		$sk_session->standard_error_handling($this_file, $@);
	}

}










eval {
my $admin_share_files = Schulkonsole::Sophomorix::ls_handout_project(
	$sk_session->userdata('id'),
	$sk_session->get_password(),
	$$projects{$project}{gid});

=item C<admin_share_files>

Available files as returned by C<Schulkonsole::Sophomorix::create_file_list()>

=cut

$sk_session->set_var('admin_share_files',
	Schulkonsole::Sophomorix::create_file_list($admin_share_files));
};
if ($@) {
	if (    ref $@
	    and $@->{code} == Schulkonsole::Error::Sophomorix::WRAPPER_NO_SUCH_DIRECTORY) {
		$sk_session->set_status(
			$sk_session->d()->get(
				'Verzeichnis zum Bereitstellen nicht gefunden'), 1);
	} else {
		$sk_session->standard_error_handling($this_file, $@);
	}
}



my @projects;
foreach my $project (sort {
	$$projects{$a}{displayname} cmp $$projects{$b}{displayname} }
	keys %$projects) {
	push @projects, { gid => $project,
	                  name => $$projects{$project}{displayname},
	                };
}

=item C<projects>

Projects of the current user as an array of hashes with the keys

=over

=item C<gid>

GID of the project

=item C<name>

Name of the project

=back

=cut

$sk_session->set_var('projects', \@projects);


=item C<isadmin>

Indicates that the current user is an administrator of the selected project

=cut

$sk_session->set_var('isadmin', 1);

=item C<project_gid>

The GID of the selected project

=cut

$sk_session->set_var('project_gid', $project);

=item C<project>

The name of the selected project

=cut

$sk_session->set_var('project', $$projects{$project}{displayname});



$sk_session->print_page("$this_file.tt", $this_file);


=back

=head2 Form fields

=over

=item C<handout>

Handout files

=back

