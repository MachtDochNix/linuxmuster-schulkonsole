#!/bin/bash
#
# thomas@linuxmuster.net
# 19.02.2013
# GPL v3
#

set -e

exdir="/usr/share/doc/linuxmuster-schulkonsole/examples"
confdir="/etc/linuxmuster/schulkonsole"
bindir="/usr/bin"
dbconf="$confdir/db.conf"
dbconf_ex="$exdir/$(basename $dbconf)"
permfile="$confdir/permissions.conf"
permfile_ex="$exdir/$(basename $permfile)"
rtdir="/var/lib/schulkonsole"
prefconf="$confdir/preferences.conf"

case "$1" in
	configure)
	 # read linuxmuster.net environment
	 . /usr/share/linuxmuster/config/dist.conf
	 # check for runtimedir and create it if necessary
	 if [ ! -d "$rtdir" ]; then
	  mkdir -p $rtdir
	  chown www-data $rtdir
	  chmod 700 $rtdir
	 fi
	 # update permissions.conf
	 PERMSCRIPT="/usr/share/schulkonsole/scripts/update-permissions.sh"
	 if [ -e $PERMSCRIPT ]; then
	  $PERMSCRIPT
	  chmod 644 "$permfile"
	  chown www-data:www-data "$permfile"
	 fi
	 # make menus
	 MENUSCRIPT="/usr/share/schulkonsole/scripts/make-menus.sh"
	 if [ -e $MENUSCRIPT ]; then
	  $MENUSCRIPT
	 fi
	 # only on configured system
	 [ -e "$INSTALLED" ] || exit 0

	 # check for valid db.conf
	 [ -s "$dbconf" ] || cp "$dbconf_ex" "$dbconf"
	 dbuser=`grep ^Username $dbconf | awk -F\= '{ print $2 }'`
	 dbpwd=`grep ^Password $dbconf | awk -F\= '{ print $2 }'`
	 if [ "$dbuser" != "ldap" -o -z "$dbpwd" ]; then
	  echo "Providing a random password for postgresql user ldap."
	  echo "Warning: Backing up $dbconf to $dbconf.dpkg-bak!"
	  cp "$dbconf" "$dbconf.dpkg-bak"
	  ldapdbpw=`pwgen -s 8 1`
	  psql -U postgres -d template1 -qc "ALTER USER ldap WITH PASSWORD '"$ldapdbpw"';"
	  sed -e "s/^Password=.*/Password=$ldapdbpw/" -i "$dbconf"
	  chown www-data:www-data "$dbconf"
	  chmod 400 "$dbconf"
	 fi
	  
	 # fixes img alias in schulkonsole's apache2.conf (closes #86)
	 conf="/etc/linuxmuster/schulkonsole/apache2.conf"
	 replace[0]="/schulkonsole/img/"
	 replace[1]="/favicon.ico"
	 searchstr[0]="Alias ${replace[0]} /usr/share/schulkonsole/css/img/"
	 searchstr[1]="Alias ${replace[1]} /usr/share/schulkonsole/css/img/favicon.ico"
	 for i in 0 1; do
	  if ! grep -q "${searchstr[$i]}" $conf; then
	   if [ -z "$backed_up" ]; then
	    echo "Backing up $conf to $conf.dpkg-bak."
	    backed_up=yes
	    cp $conf $conf.dpkg-bak
	   fi
	   if [ -z "$echoed" ]; then
	    echo "Fixing schulkonsole's apache2.conf."
	    echoed=yes
	   fi
	   sed -e "s|Alias ${replace[$i]} .*|${searchstr[$i]}|g" -i "$conf"
	  fi
	 done
	# fix access rights
	touch /var/cache/linuxmuster/blocked_hosts.internet
	chmod -f 644 /var/cache/linuxmuster/blocked_hosts.internet
	touch /var/cache/linuxmuster/blocked_hosts.intranet
	chmod -f 644 /var/cache/linuxmuster/blocked_hosts.intranet
	# fixes missing jquery alias FIXME: match only once
	if ! grep -q 'Alias[[:space:]]*/jquery/[[:space:]].*' $conf; then
    	if [ -z "$backed_up" ]; then
        	echo "Backing up $conf to $conf.dpkg-bak."
        	backed_up=yes
        	cp $conf $conf.dpkg-bak
    	fi
    	echo "Adding jquery alias to schulkonsole's apache2.conf."
    	sed '/\tAlias \/schulkonsole\/css\//{ i\
\tAlias /jquery/ /usr/share/schulkonsole/jquery/

}' -i $conf
 	fi
	# fixes for /shtml/ -> /tt/
	if grep -q '/shtml/' $conf; then
    	if [ -z "$backed_up" ]; then
        	echo "Backing up $conf to $conf.dpkg-bak."
        	backed_up=yes
        	cp $conf $conf.dpkg-bak
    	fi
    	echo "schulkonsole.js has moved from /shtml/ to /tt/."
    	sed 's@/shtml/@/tt/@g' -i $conf
 	fi
	apache2ctl graceful 2> /dev/null || true

	# create wifi project
	echo "Ensure existance of wlan_ldap_group(default: p_wifi) as sophomorix project..."
	wlan_ldap_group=p_wifi
	if grep -q '^wlan_ldap_group' $prefconf; then
	    wlan_ldap_group="$(grep '^wlan_ldap_group' $prefconf| cut -d\= -f2)"
	    echo "   preferences.conf: wlan_ldap_group=${wlan_ldap_group}"
	fi
	if ! ldapsearch -x "(cn=${wlan_ldap_group})"|grep -q 'posixGroup'; then
	    echo -n "   creating non-existing project ${wlan_ldap_group}..."
	    sophomorix-project -p ${wlan_ldap_group} --create --admins administrator --nojoin >/dev/null 2>/dev/null \
		&& echo "Done." || echo "Failed."
	else
	    admin="$(sophomorix-project -p p_wifi -i|cut -d\| -f3|grep administrator| tr -d '[[:space:]]')"
	    nojoin="$(sophomorix-project -p p_wifi -i|cut -d\| -f2|grep '^Joinable'|cut -d\: -f2|grep '0' | tr -d '[[:space:]]')"
	    if [ ! "${admin}" = "administrator" ]; then
		echo "    --> Please add user administrator to wlan project ${wlan_ldap_group}! <--"
	    fi
	    if [ ! "${nojoin}" = "0" ]; then
		echo "    --> Please set flag --nojoin for wlan project ${wlan_ldap_group}! <--"
	    fi
	fi

	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 0
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
